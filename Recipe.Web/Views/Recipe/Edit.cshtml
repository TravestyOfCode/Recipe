@model Recipe.Web.ViewModels.Recipe.RecipeEditViewModel

@{
    ViewData["Title"] = "Edit Recipe";
}

<h1>@ViewData["Title"]</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-12">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" asp-for="@Model.Recipe.Id" />
                <div class="col-6">
                    <label asp-for="@Model.Recipe.Title" class="control-label fw-bold"></label>
                    <input asp-for="@Model.Recipe.Title" class="form-control" />
                    <span asp-validation-for="@Model.Recipe.Title" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-6">
                    <label asp-for="@Model.Recipe.Categories" class="control-label fw-bold"></label>
                    <input asp-for="@Model.Recipe.Categories" class="form-control" />
                    <span asp-validation-for="@Model.Recipe.Categories" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-6">
                    <label asp-for="@Model.Recipe.Description" class="control-label fw-bold"></label>
                    <textarea asp-for="@Model.Recipe.Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="@Model.Recipe.Description" class="text-danger"></span>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="fw-bold">Ingredients</div>
                <div id="ingredients-list" class="">
                    @foreach(var ingredient in Model.Recipe.Ingredients)
                    {
                        var index = "ing-" + Guid.NewGuid();

                        var uoms = new SelectList(Model.UnitOfMeasures, "Key", "Value", ingredient.UnitOfMeasureId);

                        <div class="form-group" id="@index">
                            <input type="hidden" name="Recipe.ingredients.Index" value="@index" />
                            <label class="form-label">Qty.</label>
                            <input type="number" step=".00001" min=".00001" max="9999.99999" name="Recipe.ingredients[@index].Quantity" class="" value="@ingredient.Quantity"/>
                            <label class="form-label">Product</label>
                            <input type="text" name="Recipe.ingredients[@index].Product" class="" value="@ingredient.Product" />
                            <label class="form-label">Units</label>
                            <select name="Recipe.ingredients[@index].UnitOfMeasureId" asp-items="uoms" class="col">
                                <option value=""></option>
                            </select>
                            <button type="button" class="btn btn-danger col-auto" onclick="DeleteIngredient('@index')">Delete</button>
                        </div>
                    }
                    
                </div>
                <button type="button" onclick="AddNewIngredient()" class="btn btn-primary">Add Ingredient</button>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="@Model.Recipe.Instructions" class="control-label fw-bold"></label>
                <textarea asp-for="@Model.Recipe.Instructions" class="form-control" rows="6"></textarea>
                <span asp-validation-for="@Model.Recipe.Instructions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>

    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function AddNewIngredient() {
            const ingredientsList = document.getElementById("ingredients-list");

            fetch("../AddIngredient?prefix=Recipe.", {
                method: "GET",
                mode: "cors",
                credentials: "same-origin"
            })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("There was an error adding an new ingredient." + response.statusText);
                    }

                    return response.text();
                })
                .then((response) => {
                    ingredientsList.insertAdjacentHTML("beforeend", response);
                });
        }

        function DeleteIngredient(id) {
            if (confirm("Are you sure you want to delete this ingredient?")) {
                document.getElementById(id).remove();
            }

        }
    </script>
}
